{"paragraphs":[{"text":"%md\n### Useful stuff to clean our data","user":"anonymous","dateUpdated":"2019-02-14T18:32:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550167915730_-1214093870","id":"20190214-181155_440950642","dateCreated":"2019-02-14T18:11:55+0000","dateStarted":"2019-02-14T18:32:34+0000","dateFinished":"2019-02-14T18:32:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:28609","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Useful stuff to clean our data</h3>\n</div>"}]}},{"text":"import org.apache.spark.ml.feature.{IndexToString, StringIndexer, VectorAssembler, VectorIndexer}\nimport org.apache.spark.ml.regression.LinearRegression\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.sql.Encoders\n\nval opera = \".*Opera.*\".r\nval safari = \".*Safari.*\".r\nval chrome = \".*Chrome.*\".r\nval firefox = \".*Firefox.*\".r\n\nval toNav = udf((ua: String) => {\n    ua match {\n      case opera() => \"Opera\"\n      case chrome() => \"Chrome\"\n      case firefox() => \"Firefox\"\n      case _ => ua\n    }\n  })","user":"anonymous","dateUpdated":"2019-02-14T18:32:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550165143241_2065636510","id":"20190214-172543_593144153","dateCreated":"2019-02-14T17:25:43+0000","dateStarted":"2019-02-14T18:32:34+0000","dateFinished":"2019-02-14T18:32:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:28610","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.feature.{IndexToString, StringIndexer, VectorAssembler, VectorIndexer}\nimport org.apache.spark.ml.regression.LinearRegression\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.sql.Encoders\nopera: scala.util.matching.Regex = .*Opera.*\nsafari: scala.util.matching.Regex = .*Safari.*\nchrome: scala.util.matching.Regex = .*Chrome.*\nfirefox: scala.util.matching.Regex = .*Firefox.*\ntoNav: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,StringType,Some(List(StringType)))\n"}]}},{"text":"case class Request(uuid: String, origin: String, ip: String, browser: String, timestamp: Long, latitude: Double, longitude: Double, price: Double)","user":"anonymous","dateUpdated":"2019-02-14T18:32:35+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550165691546_-105982038","id":"20190214-173451_505192576","dateCreated":"2019-02-14T17:34:51+0000","dateStarted":"2019-02-14T18:32:35+0000","dateFinished":"2019-02-14T18:32:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:28611","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"defined class Request\n"}]}},{"text":"%md\nHow to force schema while reading csv:\n```scala\nval schema = Encoders.product[Request].schema\n\nval df = spark\n    .read\n    .schema(schema)\n```","user":"anonymous","dateUpdated":"2019-02-14T18:32:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550167955483_-470801105","id":"20190214-181235_1149979411","dateCreated":"2019-02-14T18:12:35+0000","dateStarted":"2019-02-14T18:32:36+0000","dateFinished":"2019-02-14T18:32:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:28612","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>How to force schema while reading csv:</p>\n<pre><code class=\"scala\">val schema = Encoders.product[Request].schema\n\nval df = spark\n    .read\n    .schema(schema)\n</code></pre>\n</div>"}]}},{"text":"val schema = Encoders.product[Request].schema\n\nval df = spark\n    .read\n    .option(\"header\", \"true\")\n    .schema(schema)\n    .csv(\"/zeppelin/files/dataset.csv\")\n    .select($\"uuid\", $\"origin\", $\"ip\", toNav($\"browser\") as \"browser\", $\"timestamp\", $\"latitude\", $\"longitude\", $\"price\")\n    .na.drop()","user":"anonymous","dateUpdated":"2019-02-14T18:32:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550165475285_1157473655","id":"20190214-173115_626862487","dateCreated":"2019-02-14T17:31:15+0000","dateStarted":"2019-02-14T18:32:36+0000","dateFinished":"2019-02-14T18:32:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:28613","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"schema: org.apache.spark.sql.types.StructType = StructType(StructField(uuid,StringType,true), StructField(origin,StringType,true), StructField(ip,StringType,true), StructField(browser,StringType,true), StructField(timestamp,LongType,false), StructField(latitude,DoubleType,false), StructField(longitude,DoubleType,false), StructField(price,DoubleType,false))\ndf: org.apache.spark.sql.DataFrame = [uuid: string, origin: string ... 6 more fields]\n"}]}},{"text":"%md\nCreate an apply a string indexer:\n\n```scala\nval encoder = new StringIndexer()\n    .setInputCol(\"names\")\n    .setOutputCol(\"nameIndex\")\n\nencoder.fit(df).transform(df)\n```\n","user":"anonymous","dateUpdated":"2019-02-14T18:32:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550168213624_333073672","id":"20190214-181653_219709080","dateCreated":"2019-02-14T18:16:53+0000","dateStarted":"2019-02-14T18:32:36+0000","dateFinished":"2019-02-14T18:32:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:28614","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Create an apply a string indexer:</p>\n<pre><code class=\"scala\">val encoder = new StringIndexer()\n    .setInputCol(&quot;names&quot;)\n    .setOutputCol(&quot;nameIndex&quot;)\n\nencoder.fit(df).transform(df)\n</code></pre>\n</div>"}]}},{"text":"%md\nCreate a feature column:\n\n```scala\nval vectorAssembler = new VectorAssembler()\n    .setInputCols(Array(\"name\", \"weight\", \"age\"))\n    .setOutputCol(\"features\")\n\nvectorAssembler.transform(df)\n```","user":"anonymous","dateUpdated":"2019-02-14T18:32:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550168332225_1915466810","id":"20190214-181852_494601277","dateCreated":"2019-02-14T18:18:52+0000","dateStarted":"2019-02-14T18:32:37+0000","dateFinished":"2019-02-14T18:32:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:28615","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Create a feature column:</p>\n<pre><code class=\"scala\">val vectorAssembler = new VectorAssembler()\n    .setInputCols(Array(&quot;name&quot;, &quot;weight&quot;, &quot;age&quot;))\n    .setOutputCol(&quot;features&quot;)\n\nvectorAssembler.transform(df)\n</code></pre>\n</div>"}]}},{"text":"%md\nCreate and apply a model:\n\n```scala\nval lgr = new LinearRegression()\n    .setLabelCol(\"height\")\n    .setFeaturesCol(\"features\")\n\nlgr.fit(dfFeatures).transform(dfFeatures)\n```","user":"anonymous","dateUpdated":"2019-02-14T18:32:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550168594898_-498458282","id":"20190214-182314_1151867419","dateCreated":"2019-02-14T18:23:14+0000","dateStarted":"2019-02-14T18:32:37+0000","dateFinished":"2019-02-14T18:32:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:28616","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Create and apply a model:</p>\n<pre><code class=\"scala\">val lgr = new LinearRegression()\n    .setLabelCol(&quot;height&quot;)\n    .setFeaturesCol(&quot;features&quot;)\n\nlgr.fit(dfFeatures).transform(dfFeatures)\n</code></pre>\n</div>"}]}},{"text":"","user":"anonymous","dateUpdated":"2019-02-14T18:32:24+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=30","http://172.17.0.2:4040/jobs/job?id=31","http://172.17.0.2:4040/jobs/job?id=32","http://172.17.0.2:4040/jobs/job?id=33","http://172.17.0.2:4040/jobs/job?id=34","http://172.17.0.2:4040/jobs/job?id=35","http://172.17.0.2:4040/jobs/job?id=36"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1550166111821_1243831827","id":"20190214-174151_203452595","dateCreated":"2019-02-14T17:41:51+0000","dateStarted":"2019-02-14T18:32:02+0000","dateFinished":"2019-02-14T18:32:10+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28617"},{"user":"anonymous","dateUpdated":"2019-02-14T18:32:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1550169122913_-972521292","id":"20190214-183202_747282107","dateCreated":"2019-02-14T18:32:02+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28618"}],"name":"Spark_ML_Exercice","id":"2E3J2USY9","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}